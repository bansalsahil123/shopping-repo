apiVersion: apps/v1
kind: Deployments
metadata:
  name: ecommerce-deployment
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2        # how many pods we can add at a time
      maxUnavailable: 0
  selector:
    matchLabels:
      component: web
  template:
    metadata:
      labels:
        component: web
    spec:
      containers:
       - name: django
         image: us-central1-docker.pkg.dev/marine-set-350105/image-repo/shopping:v1
         ports:
          - containerPort: 9001
         imagePullPolicy: Always
         env:
          - name: DJANGO_SUPERUSER_PASSWORD
            value: ruckus
          - name: DJANGO_SUPERUSER_EMAIL
            value: bansalsahil227@gmail.com
          - name: DJANGO_SUPERUSER_USERNAME
            value: admin
          - name: PGUSER
            value: postgres
          - name: PGHOST
            value: postgres-cluster-ip-service
          - name: PGPORT
            value: '5432'
          - name: PGDATABASE
            value: postgres
          - name: PGPASSWORD
            value: pgpassword123
         resources:
          requests:
            cpu: 10m
      initContainers:
       - name: init-django
         image: us-central1-docker.pkg.dev/marine-set-350105/image-repo/shopping:v1
         imagePullPolicy: Always
         env:
          - name: DJANGO_SUPERUSER_PASSWORD
            value: ruckus
          - name: DJANGO_SUPERUSER_EMAIL
            value: bansalsahil227@gmail.com
          - name: DJANGO_SUPERUSER_USERNAME
            value: admin
          - name: PGUSER
            value: postgres
          - name: PGHOST
            value: postgres-cluster-ip-service
          - name: PGPORT
            value: '5432'
          - name: PGDATABASE
            value: postgres
          - name: PGPASSWORD
            value: pgpassword123
         command:
         - bash
         - -c
         - python3 manage.py makemigrations  &&
           python3 manage.py migrate
